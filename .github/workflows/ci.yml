name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for jj compatibility
    
    - name: Install Lua
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: "5.1"
    
    - name: Install LuaRocks
      uses: leafo/gh-actions-luarocks@v4
    
    - name: Install luacheck
      run: luarocks install luacheck
    
    - name: Run luacheck
      run: luacheck .

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for jj compatibility
    
    - name: Install stylua
      uses: JohnnyMorganz/stylua-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: latest
        args: --check .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        neovim_version: ['nightly', 'stable']
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for jj compatibility
    
    - name: Install Neovim
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: ${{ matrix.neovim_version == 'stable' && 'stable' || 'nightly' }}
    
    - name: Install jj (Jujutsu)
      run: |
        curl -L https://github.com/martinvonz/jj/releases/download/v0.15.1/jj-v0.15.1-x86_64-unknown-linux-musl.tar.gz -o jj.tar.gz
        tar -xzf jj.tar.gz
        sudo mv jj /usr/local/bin/
        jj --version
    
    - name: Set up test repository
      run: |
        # Initialize jj in the existing git repository (checkout already provides full history)
        jj git init --colocate .
        
        # Create test files for comprehensive testing
        echo "test content" > test.txt
        echo "modified content" > test2.txt
        mkdir -p subdir
        echo "subdir content" > subdir/file.txt
        
        # Create a test commit
        jj describe -m "Add test files for CI testing"
    
    - name: Run comprehensive test suite
      run: |
        export CI=true
        
        # Make test runner executable
        chmod +x tests/run_tests.sh
        
        # Run all tests using intelligent discovery
        ./tests/run_tests.sh