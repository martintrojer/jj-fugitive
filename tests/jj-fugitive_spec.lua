local jj_fugitive = require("jj-fugitive")

describe("jj-fugitive", function()
  it("can be required", function()
    assert.is_not_nil(jj_fugitive)
  end)

  it("has expected functions", function()
    assert.is_function(jj_fugitive.jj)
    assert.is_function(jj_fugitive.status)
    assert.is_function(jj_fugitive.log)
    assert.is_function(jj_fugitive.diff)
    assert.is_function(jj_fugitive.commit)
    assert.is_function(jj_fugitive.new)
    assert.is_function(jj_fugitive.next)
    assert.is_function(jj_fugitive.prev)
    assert.is_function(jj_fugitive.edit)
    assert.is_function(jj_fugitive.bookmark)
    assert.is_function(jj_fugitive.complete)
  end)

  describe("complete function", function()
    it("returns completions for jj commands", function()
      local completions = jj_fugitive.complete("s", ":J s", 4)
      assert.is_table(completions)
      assert.is_true(vim.tbl_contains(completions, "status"))
    end)

    it("filters completions based on arglead", function()
      local completions = jj_fugitive.complete("st", ":J st", 5)
      assert.is_table(completions)
      assert.is_true(vim.tbl_contains(completions, "status"))
      assert.is_false(vim.tbl_contains(completions, "log"))
    end)
  end)
end)
